services:
  postgres:
    image: postgres:16
    container_name: rent-service-db
    environment:
      POSTGRES_DB: rent_service_db
      POSTGRES_USER: rental_user
      POSTGRES_PASSWORD: rental_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - immo
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rental_user -d rent_service_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  rent-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rent-service
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://rent-service-db:5432/rent_service_db
      SPRING_DATASOURCE_USERNAME: rental_user
      SPRING_DATASOURCE_PASSWORD: rental_password
      SERVER_PORT: 8082
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - immo
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8082/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  postgres_data:

networks:
  immo:
    external: true 